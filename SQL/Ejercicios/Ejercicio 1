-- Active: 1693249414748@@127.0.0.1@5432@postgres@public
--Ejercicio 1
--1. Crear una tabla llamada "Clientes" con las columnas: id (entero, clave primaria),
--nombre (texto) y email (texto).

CREATE TABLE IF NOT EXISTS Clientes (
  id SERIAL PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  email VARCHAR(255)
)
--2. Insertar un nuevo cliente en la tabla "Clientes" con id=1, nombre="Juan" y
--email="juan@example.com"

INSERT INTO public.clientes (
	nombre, 
	email
)
VALUES ('Juan', 'juan@example.com')

--3. Actualizar el email del cliente con id=1 a "juan@gmail.com"

UPDATE public.clientes
SET email = 'juan@gmail.com'
WHERE id = 1

--4. Eliminar el cliente con id=1 de la tabla "Clientes".

DELETE FROM public.clientes
WHERE id = 1

--5. Crear una tabla llamada "Pedidos" con las columnas: id (entero, clave primaria),
--cliente_id (entero, clave externa referenciando a la tabla "Clientes"), producto
--(texto) y cantidad (entero).

CREATE TABLE IF NOT EXISTS Pedidos (
  id INT PRIMARY KEY,
  cliente_id INT NOT NULL,
  producto VARCHAR(255),
  cantidad INT,
  CONSTRAINT FK_cliente_id FOREIGN KEY (cliente_id) REFERENCES clientes (id)
)

--6. Insertar un nuevo pedido en la tabla "Pedidos" con id=1, cliente_id=1,
--producto="Camiseta" y cantidad=2.

INSERT INTO public.pedidos (id, cliente_id, producto, cantidad)
VALUES (1, 2, 'camiseta', 2)

--Actualizar la cantidad del pedido con id=1 a 3.

UPDATE public.pedidos
SET cantidad = 3
WHERE id = 1

--8. Eliminar el pedido con id=1 de la tabla "Pedidos".

DELETE FROM public.pedidos
WHERE id = 1

--9. Crear una tabla llamada "Productos" con las columnas: id (entero, clave
--primaria), nombre (texto) y precio (decimal).

CREATE TABLE IF NOT EXISTS Productos (
  id INT PRIMARY KEY,
  nombre VARCHAR(255),
  precio DECIMAL
)

--10. Insertar varios productos en la tabla "Productos" con diferentes valores.

INSERT INTO public.productos (id, nombre, precio)
VALUES (1, 'camiseta', 2.2)

INSERT INTO public.productos (id, nombre, precio)
VALUES (2, 'pantalÃ³n', 3.4)

--11. Consultar todos los clientes de la tabla "Clientes".

SELECT clientes FROM clientes

--12. Consultar todos los pedidos de la tabla "Pedidos" junto con los nombres de losclientes correspondientes.

SELECT * FROM public.pedidos
LEFT JOIN public.clientes
ON public.pedidos.cliente_id = public.clientes.id

--13. Consultar los productos de la tabla "Productos" cuyo precio sea mayor a $50.
SELECT * FROM public.productos
WHERE precio > 2.2

--14. Consultar los pedidos de la tabla "Pedidos" que tengan una cantidad mayor o igual a 5.
SELECT * FROM public.pedidos
WHERE cantidad > 2

--15. Consultar los clientes de la tabla "Clientes" cuyo nombre empiece con la letra "A".

SELECT * FROM public.clientes
WHERE nombre LIKE 'J%'

--16. Realizar una consulta que muestre el nombre del cliente y el total de pedidos realizados por cada cliente.
SELECT nombre, cantidad FROM public.clientes
LEFT JOIN public.pedidos
ON public.clientes.id = public.pedidos.cliente_id

